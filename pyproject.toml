# https://packaging.python.org/en/latest/specifications/pyproject-toml/
[build-system]
requires = ["pdm-backend>=2.1", "wheel>=0.44"]
build-backend = "pdm.backend"

[project]
name = "pymediainfo"
description = "A Python wrapper for the MediaInfo library."
authors = [
    {name = "Louis Sautier", email = "sautier.louis@gmail.com"},
]
readme = "README.md"
license = {text = "MIT"}
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dynamic = ["version"]
requires-python = ">=3.9"
dependencies = [
]

[project.optional-dependencies]
tests = [
    "pytest>=6",
    "pytest-cov",
    "pytest-xdist",
]
docs = [
    "alabaster",
    "myst-parser",
    "setuptools_scm",
    "sphinx",
]
dev = [
    "ipython",
    "mypy>=1.0",
    "black",
    "isort",
    "flake8",
    "pylint",
]

[project.urls]
Homepage = "https://github.com/sbraz/pymediainfo"
Documentation = "https://pymediainfo.readthedocs.io/"
Bugs = "https://github.com/sbraz/pymediainfo/issues"


# Custom entries for downloading the bundled libmediainfo
[tool.bundled_libmediainfo]
version = "24.12"

[[tool.bundled_libmediainfo.wheel]]
tag = "manylinux_2_27_x86_64"
platform = "linux"
arch = "x86_64"
blake2b_sums = "13c4afb2948187cc06f13b1cd7d7a49f8618b8d1e3a440d9e96ef7b486a653d5e2567aae97dc253e3d3f484a7837e4b5a972abab4803223300a79c601c0bcce1"

[[tool.bundled_libmediainfo.wheel]]
tag = "manylinux_2_27_aarch64"
platform = "linux"
arch = "arm64"
blake2b_sums = "4e5a9826fa987f4bde46a6586894d45f3d5381f25d8886dfef67f5db3a9f4377ecafc12acc6e2d71e43b062b686c2db2523052a1f3dd7505a41091847788d114"

[[tool.bundled_libmediainfo.wheel]]
tag = "macosx_10_10_universal2"
platform = "darwin"
#Â The same file is used for darwin x86_64 and arm64 (suffixed Mac_x86_64+arm64.tar.bz2)
arch = "arm64"
blake2b_sums = "65b8195f0859369fa0ab1870cbde1535bb57f16bde451b22585d849c870f1ca92972328c11edd15b6f8187445dd58efff7107cfce39d2be7a88e8c434589b4ae"

[[tool.bundled_libmediainfo.wheel]]
tag ="win_amd64"
platform = "win32"
arch = "x86_64"
blake2b_sums = "f831c588e9eaf51201b4cc7995dce66852591764fc5ef05effd3a8a2037ff5d37ec039eef5d1f990f05bd7452c1cad720e95b77a095f9f1a690689e351fc00b8"

[[tool.bundled_libmediainfo.wheel]]
tag = "win32"
platform = "win32"
arch = "i386"
blake2b_sums = "0f0e14c103eac858fe683ec7d51634d62e5e0af658940fd26608249f1048846a92a334438204fe5ecfceb70cb00e5550bfb717a77f10816a2583b5041bb61790"

[[tool.bundled_libmediainfo.wheel]]
tag = "win_arm64"
platform = "win32"
arch = "arm64"
blake2b_sums = "e9f426f2e873f65ca1fdede5f8eb6dc3e871e682b821ad3f62acb1428eda5a27ce363f77a2c621d1b15f8e9b94976a10afb56fc069325ca7ba4efad14df03105"


# https://pdm-project.org/latest/
[tool.pdm.version]
source = "scm"

[tool.pdm.dev-dependencies]
download_library = ["wheel>=0.44", "requests", "tomlkit"]

[tool.pdm.build]
source-includes = ["docs/", "scripts/", "tests/"]

[tool.pdm.scripts.types]
help = "Check type hints"
cmd = "mypy --install-types --non-interactive --config-file=pyproject.toml {args:src tests}"

[tool.pdm.scripts.docs]
help = "Build and test documentation"
composite = [
  "sphinx-build -W --keep-going --color -b html docs docs/_build",
  "sphinx-build -W --keep-going --color -b linkcheck docs docs/_build",
]

[tool.pdm.scripts.test-nocov]
help = "Run tests without coverage"
cmd = "pytest {args:-n auto}"

[tool.pdm.scripts.test]
help = "Run tests with coverage"
cmd = "pytest --cov --cov-report=term-missing --cov-config=pyproject.toml {args:-n auto}"

[tool.pdm.scripts.download_library]
help = "Download mediainfo library"
cmd = "python scripts/download_library.py {args:-c --auto}"

[tool.pdm.scripts.clean_library]
help = "Clean mediainfo library"
cmd = "python scripts/download_library.py -c"

[tool.pdm.scripts.tag_wheel]
help = "Tag the wheels for a specific platform"
cmd = "python scripts/tag_pure_wheels.py"

[tool.pdm.scripts.update_checksums]
help = "Update MediaInfo version and/or checksums in pyproject.toml"
cmd = "python scripts/update_checksums.py {args}"

[tool.pdm.scripts.build_wheel]
help = "Build wheel with bundled library"
composite = [
  "download_library -c {args}",
  "{pdm} build -v --no-sdist",
  "tag_wheel {args}",
]

[tool.pdm.scripts.build_wheel_no_clean]
help = "Build wheel with bundled library"
composite = [
  "download_library -c {args}",
  "{pdm} build -v --no-clean --no-sdist",
  "tag_wheel {args}",
]

[tool.pdm.scripts.build_all]
help = "Build all the wheels with bundled library and the sdist and wheel without library"
composite = [
  # build sdist, clean dist
  "{pdm} build -v --no-wheel",
  "build_wheel_no_clean -p linux -a arm64",
  "build_wheel_no_clean -p linux -a x86_64",
  "build_wheel_no_clean -p win32 -a arm64",
  "build_wheel_no_clean -p win32 -a x86_64",
  "build_wheel_no_clean -p win32 -a i386",
  "build_wheel_no_clean -p darwin -a arm64",
  # remove any library before building barebone wheel
  "clean_library",
  "{pdm} build -v --no-sdist --no-clean",
]


# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
# global-only flags
pretty = true
show_error_codes = true

[[tool.mypy.overrides]]
module = ["pymediainfo.*"]
strict = true


[tool.pytest.ini_options]
addopts = "-vv -r a"
